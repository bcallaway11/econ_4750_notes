unlink('01-intro_cache', recursive = TRUE)
b)
```{r}
lpm <- lm(employed ~ age + I(age^2), data=data)
```
a)
```{r}
# load the data
library(haven)
data <- read_dta("employment_08_09.dta")
setwd("~/Dropbox/Courses/Georgia/Undergrad Econometrics/Spring 2021/Homeworks")
a)
```{r}
# load the data
library(haven)
data <- read_dta("employment_08_09.dta")
# fraction empolyed in April 2009
# note: an easy way to estimate this and get a confidence interval
# is to just run a regression on an intercept
mean_reg <- lm(employed ~ 1, data=data)
# probability of being employed
p <- coef(mean_reg)
round(p,3)
# 95% ci
se <- summary(mean_reg)$coefficients[,2]
ciL <- round(p - 1.96*se,3)
ciU <- round(p + 1.96*se,3)
cat("95% CI: [", ciL, ", ", ciU, "]\n")
```
# fraction empolyed in April 2009
# note: an easy way to estimate this and get a confidence interval
# is to just run a regression on an intercept
mean_reg <- lm(employed ~ 1, data=data)
# probability of being employed
p <- coef(mean_reg)
round(p,3)
# 95% ci
se <- summary(mean_reg)$coefficients[,2]
ciL <- round(p - 1.96*se,3)
ciU <- round(p + 1.96*se,3)
cat("95% CI: [", ciL, ", ", ciU, "]\n")
```
# fraction empolyed in April 2009
# note: an easy way to estimate this and get a confidence interval
# is to just run a regression on an intercept
mean_reg <- lm(employed ~ 1, data=data)
# probability of being employed
p <- coef(mean_reg)
round(p,3)
# 95% ci
se <- summary(mean_reg)$coefficients[,2]
ciL <- round(p - 1.96*se,3)
ciU <- round(p + 1.96*se,3)
cat("95% CI: [", ciL, ", ", ciU, "]\n")
```
ciU
# fraction empolyed in April 2009
# note: an easy way to estimate this and get a confidence interval
# is to just run a regression on an intercept
mean_reg <- lm(employed ~ 1, data=data)
# probability of being employed
p <- coef(mean_reg)
round(p,3)
# 95% ci
se <- summary(mean_reg)$coefficients[,2]
ciL <- round(p - 1.96*se,3)
ciU <- round(p + 1.96*se,3)
cat("95% CI: [", ciL, ", ", ciU, "]\n")
```
b)
```{r}
lpm <- lm(employed ~ age + I(age^2), data=data)
```
head(data)
head(data$employed)
head(data$age)
b)
```{r}
lpm <- lm(employed ~ age + I(age^2), data=data)
```
b)
```{r}
lpm <- lm(employed ~ age, data=data)
```
b)
```{r}
lpm <- lm(employed ~ age, data=data)
b)
```{r}
lpm <- lm(employed ~ age + I(age^2), data=data)
summary(lpm)
```{r}
possible_ages <- seq(20,65)
pred_employment <- predict(lpm, newdata=data.frame(age=possible_ages))
```
```{r}
possible_ages <- seq(20,65)
pred_employment <- predict(lpm, newdata=data.frame(age=possible_ages))
```{r}
possible_ages <- seq(20,65)
pred_employment <- predict(lpm, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=pred_employment)
ggplot(data=)
```
```{r}
possible_ages <- seq(20,65)
pred_employment <- predict(lpm, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=pred_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
```
c)
```{r}
probit_est <- glm(employed ~ age + I(age^2), family=binomial(link=probit),
data=data)
summary(probit_est)
probit_employment <- predict(probit_est, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=pred_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
c)
```{r}
probit_est <- glm(employed ~ age + I(age^2), family=binomial(link=probit),
data=data)
summary(probit_est)
probit_employment <- predict(probit_est, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=probit_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
c)
```{r}
probit_est <- glm(employed ~ age + I(age^2), family=binomial(link=probit),
data=data)
summary(probit_est)
probit_employment <- predict(probit_est, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=probit_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
```{r}
logit_est <- glm(employed ~ age + I(age^2), family=binomial(link=logit),
data=data)
summary(logit_est)
```
Yes, this looks like the effect of age is nonlinear.  It is hard to compare the coefficients directly to the ones from the previous problem, so I'll plot predicted employment from this model as a function of age.
```{r}
probit_employment <- predict(probit_est, newdata=data.frame(age=possible_ages))
# make the plot
library(ggplot2)
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=probit_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
```
```{r}
logit_est <- glm(employed ~ age + I(age^2), family=binomial(link=logit),
data=data)
summary(logit_est)
```
Once again, these results suggest that the effect of age is nonlinear.  As before, it is hard to directly compare the coefficient estimates across the linear probability model, probit, and logit; therefore, I plot the predicted probabilities from the logit model next.        ```{r}
logit_employment <- predict(logit_est, newdata=data.frame(age=possible_ages))
# make the plot
# build data to plot
plot_df <- cbind.data.frame(x=possible_ages, y=logit_employment)
ggplot(data=plot_df, mapping=aes(x=x, y=y)) +
geom_line() +
ylab("predicted employment") +
xlab("age") +
theme_bw()
```
```{r}
bw_data <- read_dta("Birthweight_Smoking.dta")
bw_reg <- lm(Birthweight ~ Smoker + Alcohol + Nprevist + Unmarried, data=bw_data)
```{r}
bw_data <- read_dta("birthweight_smoking.dta")
bw_reg <- lm(Birthweight ~ Smoker + Alcohol + Nprevist + Unmarried, data=bw_data)
head(bw_data)
```{r}
bw_data <- read_dta("birthweight_smoking.dta")
bw_reg <- lm(birthweight ~ smoker + alcohol + nprevist + unmarried, data=bw_data)
```{r}
bw_data <- read_dta("birthweight_smoking.dta")
bw_reg <- lm(birthweight ~ smoker + alcohol + nprevist + unmarried, data=bw_data)
summary(bw_reg)
-175/mean(bw_data$birthweight)
