ymin=(att-crit.val*se)),
width=.2) +
facet_wrap(~group, ncol=1)
library(dplyr)
plotdf$post <- as.factor(1*(plotdf$group >= plotdf$time.period))
plotdf$group_name <- case_when(plotdf$group==2004 ~ "First treated group",
plotdf$group==2006 ~ "Second treated group",
plotdf$group==2007 ~ "Third treated group")
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.2) +
facet_wrap(~group_name, ncol=1)
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_bw()
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_classic()
ggplot(plotdf, aes(x=time.period, y=att, color=post)) +
geom_point() +
geom_errorbar(aes(ymax=(att+crit.val*se),
ymin=(att-crit.val*se)),
width=.1) +
facet_wrap(~group_name, ncol=1) +
theme_bw()
library(reprex)
reprex::reprex()
devtools::install_github("kylebutts/did2s")
sp <- reset.sim()
devtools::load_all("~/Dropbox/did")
devtools::load_all("~/Dropbox/pte")
library(did2s)
sp <- reset.sim()
build_sim_data(sp)
time.periods <- 8
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
data <- build_sim_dataset(sp)
data <- subset(data, (G<=5) | G==0 )
# add pre-treatment effects
data$G <- ifelse(data$G==0, 0, data$G+3)
sp$bett <- sp$betu <- rep(0,time.periods)
time.periods <- 8
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
res_varying <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", base_period="varying")
res_varying
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated")
res_nyt
head(data)
data$this_treat <- data$treat * data(period >= data$G)
data$this_treat <- data$treat * (data$period >= data$G)
head(data, 20)
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=FALSE), treatment=this_treat,
cluster_var="id")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
summary(res_did2s)
aggte(res_nt, type="group")
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr")
aggte(res_nt, type="group")
attributes(res_did2s)
did2s
did2s_estimate
time.periods <- 2
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data$this_treat <- data$treat * (data$period >= data$G)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr")
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated")
aggte(res_nt, type="dynamic")
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=ref=c(-1, Inf)), treatment="this_treat",
cluster_var="id")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=c(-1, Inf)), treatment="this_treat",
cluster_var="id")
time.periods <- 2
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data$this_treat <- data$treat * (data$period >= data$G)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=c(-1, Inf)), treatment="this_treat",
cluster_var="id")
head(data)
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=c(-1)), treatment="this_treat",
cluster_var="id")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
cluster_var="id")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
aggte(res_nt, type="dynamic")
aggte(res_nt, type="dynamic")
res_did2s
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data <- subset(data, G==2 | G==0)
data$this_treat <- data$treat * (data$period >= data$G)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(this_treat, ref=c(-1,Inf)), treatment="this_treat",
cluster_var="id")
data$e <- ifelse(data$treat==1, data$period - data$G, 0)
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(e, ref=-1), treatment="this_treat",
cluster_var="id")
res_did2s
aggte(res_nt, type="dynamic")
aggte(res_nt, type="group")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data <- subset(data, G==3 | G==0)
data$this_treat <- data$treat * (data$period >= data$G)
data$e <- ifelse(data$treat==1, data$period - data$G, 0)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="group")
aggte(res_nt, type="dynamic")
aggte(res_nt, type="group")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(e, ref=-1), treatment="this_treat",
#second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
aggte(res_nt, type="dynamic")
res_did2s
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data <- subset(data, G==3 | G==0)
data$this_treat <- data$treat * (data$period >= data$G)
data$e <- ifelse(data$treat==1, data$period - data$G, 0)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(e, ref=-1), treatment="this_treat",
#second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
head(data)
data$e <- ifelse(data$treat==1, data$period - data$G, -1)
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(e, ref=-1), treatment="this_treat",
#second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
aggte(res_nt, type="dynamic")
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
data <- subset(data, G==2 | G==0)
data$this_treat <- data$treat * (data$period >= data$G)
data$e <- ifelse(data$treat==1, data$period - data$G, -1)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
time.periods <- 3
sp <- reset.sim(time.periods=time.periods)
sp$te <- 0
sp$te.e <- 1:time.periods
sp$bett <- sp$betu <- rep(0,time.periods)
data <- build_sim_dataset(sp)
#data <- subset(data, G==2 | G==0)
data$this_treat <- data$treat * (data$period >= data$G)
data$e <- ifelse(data$treat==1, data$period - data$G, -1)
res_nt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nt, type="dynamic")
aggte(res_nyt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
second_stage=~i(e, ref=-1), treatment="this_treat",
#second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
aggte(res_nyt, type="dynamic")
aggte(res_nt, type="dynamic")
aggte(res_nyt, type="dynamic")
res_did2s
aggte(res_nyt, type="dynamic")
res_did2s <- did2s(data, "Y", first_stage=~0 | id + period,
#second_stage=~i(e, ref=-1), treatment="this_treat",
second_stage=~i(this_treat, ref=FALSE), treatment="this_treat",
cluster_var="id")
res_did2s
res_nyt <- att_gt(yname="Y", xformla=~1, data=data, tname="period", idname="id",
gname="G", est_method="dr", control_group="notyettreated",
bstrap=FALSE, cband=FALSE)
aggte(res_nyt, type="group")
# alternative version of did
all_pre_subset <- function(data, g, tp, control_group="notyettreated", ...) {
# get the correct "base" period for this group
# (subtract 2 to avoid anticipation)
main.base.period <- g - 1
#----------------------------------------------------
# if it's a pre-treatment time period (used for the
# pre-test, we need to adjust the base period)
# group not treated yet
if (tp < g) {
# move two periods before
base.period <- tp - 1
} else {
# this is a post-treatment period
base.period <- main.base.period
}
#----------------------------------------------------
#----------------------------------------------------
# collect the right subset of the data
# get group g and not-yet-treated group
if (control_group == "notyettreated") {
this.data <- subset(data, G==g | G>tp | G==0)
} else {
# use never treated group
this.data <- subset(data, G==g | G==0)
}
# get current period and base period data
this.data <- subset(this.data, period==tp | period==base.period)
# variable to keep track of pre/post periods
this.data$name <- ifelse(this.data$period==tp, "post", "pre")
# variable to indicate local treatment status
this.data$D <- 1*(this.data$G==g)
# make this.data into gt_data_frame object
this.data <- gt_data_frame(this.data)
# number of observations used for this (g,t)
n1 <- length(unique(this.data$id))
disidx <- unique(data$id) %in% unique(this.data$id)
list(gt_data=this.data, n1=n1, disidx=disidx)
}
did_res <- pte(yname="Y",
gname="G",
tname="period",
idname="id",
data=data,
setup_pte_fun=setup_pte,
subset_fun=all_pre_subset,
attgt_fun=did_attgt,
xformla=~1)
did_res
attributes(did_res)
did_res$event_study
aggte(res_nyt, type="group")
aggte(res_nyt, type="dynamic")
did_res$event_study
did_res <- pte(yname="Y",
gname="G",
tname="period",
idname="id",
data=data,
setup_pte_fun=setup_pte,
subset_fun=all_pre_subset,
attgt_fun=did_attgt,
xformla=~1,
cband=FALSE,
bstrap=FALSE)
did_res$event_study
aggte(res_nyt, type="dynamic")
pte
# alternative version of did
all_pre_subset <- function(data, g, tp, control_group="notyettreated", ...) {
# get the correct "base" period for this group
# (subtract 2 to avoid anticipation)
main.base.period <- g - 1
#----------------------------------------------------
# if it's a pre-treatment time period (used for the
# pre-test, we need to adjust the base period)
# group not treated yet
if (tp < g) {
# move two periods before
base.period <- tp - 1
} else {
# this is a post-treatment period
base.period <- main.base.period
}
#----------------------------------------------------
#----------------------------------------------------
# collect the right subset of the data
# get group g and not-yet-treated group
if (control_group == "notyettreated") {
this.data <- subset(data, G==g | G>tp | G==0)
} else {
# use never treated group
this.data <- subset(data, G==g | G==0)
}
# get current period and base period data
this.data <- subset(this.data, period==tp | period <= base.period)
browser()
# variable to keep track of pre/post periods
this.data$name <- ifelse(this.data$period==tp, "post", "pre")
# variable to indicate local treatment status
this.data$D <- 1*(this.data$G==g)
# make this.data into gt_data_frame object
this.data <- gt_data_frame(this.data)
# number of observations used for this (g,t)
n1 <- length(unique(this.data$id))
disidx <- unique(data$id) %in% unique(this.data$id)
list(gt_data=this.data, n1=n1, disidx=disidx)
}
did_res <- pte(yname="Y",
gname="G",
tname="period",
idname="id",
data=data,
setup_pte_fun=setup_pte,
subset_fun=all_pre_subset,
attgt_fun=did_attgt,
xformla=~1,
cband=FALSE,
bstrap=FALSE)
head(this.data)
this.data %>%
filter(G != g)
this.data %>%
dplyr::filter(G != g)
pivot_wider
?pivot_wider
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=id, names_from=period, values_from=Y, value_fn=mean)
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=id, names_from=period, values_from=Y, values_fn=mean)
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=id, names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean)
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean)
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean)
?mutate
?dplyr::mutate
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean) %>%
dplyr::mutate(Ybar_pre=mean(dplyr::starts_with("Y")))
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean) %>%
dplyr::mutate(Ybar_pre=mean(.data[[vars[[-c(1,2)]]]]))
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean) %>%
dplyr::mutate(Ybar_pre=rowMeans(select(.data, starts_with("Y")))
browser()
# variable to keep track of pre/post periods
this.data$name <- ifelse(this.data$period==tp, "post", "pre")
# variable to indicate local treatment status
this.data$D <- 1*(this.data$G==g)
# make this.data into gt_data_frame object
this.data <- gt_data_frame(this.data)
# number of observations used for this (g,t)
n1 <- length(unique(this.data$id))
disidx <- unique(data$id) %in% unique(this.data$id)
list(gt_data=this.data, n1=n1, disidx=disidx)
}
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean) %>%
dplyr::mutate(Ybar_pre=rowMeans(select(.data, starts_with("Y"))))
this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean) %>%
dplyr::mutate(Ybar_pre=rowMeans(dplyr::select(.data, starts_with("Y"))))
this.data2 <- this.data
this.data <- this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean)
head(this.data)
this.data$Ybar_pre <- rowMeans(this.data[,-c(1,2)])
this.data
this.data <- subset(data, G==g | G>tp | G==0)
# get current period and base period data
this.data <- subset(this.data, period==tp | period <= base.period)
head(this.data)
this.data2 <- this.data %>%
dplyr::filter(G != g) %>%
tidyr::pivot_wider(id_cols=c(id,G), names_from=period, names_prefix="Y",
values_from=Y, values_fn=mean)
this.data2$Ybar_pre <- rowMeans(this.data[,-c(1,2)])
this.data2$Ybar_pre <- rowMeans(this.data2[,-c(1,2)])
read.csv("house_price_train.csv")
setwd("~/Dropbox/Courses/Georgia/Undergrad Econometrics/Fall 2021/Projects")
read.csv("house_price_train.csv")
data <- read.csv("house_price_train.csv")
View(data)
nrow(data)
all(complete.cases(data))
setwd("~/Dropbox/Courses/Georgia/Undergrad Econometrics/Detailed Course Notes")
bookdown::render_book("index.Rmd")
library(ggplot2)
bet0 <- 2
bet1 <- 1
X <- runif(40, 0, 10)
U1 <- rnorm(40, sd=4)
U2 <- rnorm(40, sd=1)
Y1 <- bet0 + bet1*X + U1
Y2 <- bet0 + bet1*X + U2
tss1 <- sum((Y1 - mean(Y1))^2)
tss2 <- sum((Y2 - mean(Y2))^2)
tss1
tss2
